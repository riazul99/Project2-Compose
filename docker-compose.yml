# Project2-Compose — Jenkins + Docker-in-Docker (DinD)
# Purpose:
# - Provide a Docker daemon (DinD) Jenkins can use to build/push images
# - Run Jenkins controller
# - Persist Jenkins data and Docker layers via named volumes
# - Explain each service/env/volume for the assignment rubric

version: "3.8"

services:
  # ---------- Docker daemon (DinD) ----------
  dind:
    image: docker:24-dind               # DinD image provides dockerd inside the container
    privileged: true                    # Required for DinD so it can start nested dockerd
    environment:
      DOCKER_TLS_CERTDIR: /certs        # Tell DinD to generate TLS certs (secure client access)
    command: ["--host=tcp://0.0.0.0:2376"]  # Expose dockerd over TLS on 2376 for remote clients
    volumes:
      - dind-storage:/var/lib/docker    # Volume to cache Docker layers across builds
      - jenkins-docker-certs:/certs/client # Share TLS client certs to Jenkins
    networks: [jenkins]                 # Isolated network for Jenkins <-> DinD

  # ---------- Jenkins controller ----------
  jenkins:
    image: jenkins/jenkins:lts-jdk17    # LTS Jenkins with JDK 17
    user: root                          # Root to access mounted certs/paths; jobs can drop privileges if needed
    environment:
      DOCKER_HOST: tcp://dind:2376      # Point Docker CLI to the DinD daemon
      DOCKER_CERT_PATH: /certs/client   # Path for TLS client certs (mounted below)
      DOCKER_TLS_VERIFY: "1"            # Enforce TLS when talking to DinD
      # JENKINS_OPTS: --argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin
      # ↑ Optional bootstrap (don't leave default creds in production)
    volumes:
      - jenkins-home:/var/jenkins_home  # Persist jobs, plugins, config
      - jenkins-docker-certs:/certs/client:ro  # Mount client TLS certs from DinD (read-only)
    ports:
      - "8080:8080"                     # Jenkins UI
      - "50000:50000"                   # Inbound agents (optional for this project)
    depends_on: [dind]                  # Ensure DinD is up before Jenkins
    networks: [jenkins]

# ---------- Network ----------
networks:
  jenkins:                              # Private bridge network for the stack

# ---------- Volumes ----------
volumes:
  jenkins-home:                         # Jenkins state (jobs/config/plugins)
  jenkins-docker-certs:                 # TLS client certs generated by DinD
  dind-storage:                         # Docker layer cache inside DinD
